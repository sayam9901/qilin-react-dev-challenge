{"ast":null,"code":"var _jsxFileName = \"C:\\\\next.js\\\\qilin-react-dev-challenge\\\\src\\\\component\\\\GitHubUser.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\n\n// As you can see i am taking the username as a prop from any parent compoent \nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GitHubUser = ({\n  username\n}) => {\n  _s();\n  // this is userData data in which we call the api and set the user data to this state variable\n  const [userData, setUserData] = useState(null);\n  //   i added a loader as well until the data is fecth the loader is true so it will show on screen and \n  // set false as the response came from the api\n  const [loading, setLoading] = useState(true);\n  //   this is simple state to show error message that occur during the server call if any\n  const [error, setError] = useState(null);\n\n  // this is the api call using the axios if you prefer it over fetch data\n\n  //   useEffect(() => {\n  //     const fetchUserData = async () => {\n  //       try {\n  //         const response = await axios.get(`https://api.github.com/users/${username}`);\n  //         setUserData(response.data);\n  //         setLoading(false);\n  //       } catch (error) {\n  //         setError('User not found');\n  //         setLoading(false);\n  //       }\n  //     };\n\n  //     fetchUserData();\n  //   }, [username]);\n\n  // this is the api call in which i am doing a get resquest to the api using the \n  // prop username dynamically in the api to the data for specific user\n\n  useEffect(() => {\n    const fetchUserData = async () => {\n      try {\n        const response = await fetch(`https://api.github.com/users/${username}`);\n        if (!response.ok) {\n          throw new Error('User not found');\n        }\n        const data = await response.json();\n        setUserData(data);\n        setLoading(false);\n      } catch (error) {\n        setError(error.message);\n        setLoading(false);\n      }\n    };\n    fetchUserData();\n  }, [username]);\n\n  //   if loading is true we show this loader\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 12\n    }, this);\n  }\n  if (!userData) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: userData.avatar_url,\n      alt: `${username}'s avatar`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: userData.login\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Repositories:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [userData.repos_url && /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"Loading repositories...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), userData.public_repos > 0 ? userData.repos_url && fetch(userData.repos_url).then(response => response.json()).then(data => {\n        return data.map(repo => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: repo.html_url,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            children: repo.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 19\n          }, this)\n        }, repo.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }, this));\n      }) : /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"No repositories found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(GitHubUser, \"HMpZpKOdOx8cs4CYczrefosGiwY=\");\n_c = GitHubUser;\nexport default GitHubUser;\nvar _c;\n$RefreshReg$(_c, \"GitHubUser\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","GitHubUser","username","_s","userData","setUserData","loading","setLoading","error","setError","fetchUserData","response","fetch","ok","Error","data","json","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","avatar_url","alt","login","repos_url","public_repos","then","map","repo","href","html_url","target","rel","name","id","_c","$RefreshReg$"],"sources":["C:/next.js/qilin-react-dev-challenge/src/component/GitHubUser.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\n// As you can see i am taking the username as a prop from any parent compoent \r\nconst GitHubUser = ({ username }) => {\r\n    // this is userData data in which we call the api and set the user data to this state variable\r\n  const [userData, setUserData] = useState(null);\r\n//   i added a loader as well until the data is fecth the loader is true so it will show on screen and \r\n// set false as the response came from the api\r\n  const [loading, setLoading] = useState(true);\r\n//   this is simple state to show error message that occur during the server call if any\r\n  const [error, setError] = useState(null);\r\n\r\n\r\n// this is the api call using the axios if you prefer it over fetch data\r\n\r\n//   useEffect(() => {\r\n//     const fetchUserData = async () => {\r\n//       try {\r\n//         const response = await axios.get(`https://api.github.com/users/${username}`);\r\n//         setUserData(response.data);\r\n//         setLoading(false);\r\n//       } catch (error) {\r\n//         setError('User not found');\r\n//         setLoading(false);\r\n//       }\r\n//     };\r\n\r\n//     fetchUserData();\r\n//   }, [username]);\r\n\r\n\r\n// this is the api call in which i am doing a get resquest to the api using the \r\n// prop username dynamically in the api to the data for specific user\r\n\r\n\r\n  useEffect(() => {\r\n    const fetchUserData = async () => {\r\n      try {\r\n        const response = await fetch(`https://api.github.com/users/${username}`);\r\n        if (!response.ok) {\r\n          throw new Error('User not found');\r\n        }\r\n        const data = await response.json();\r\n        setUserData(data);\r\n        setLoading(false);\r\n      } catch (error) {\r\n        setError(error.message);\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchUserData();\r\n  }, [username]);\r\n\r\n//   if loading is true we show this loader\r\n\r\n  if (loading) {\r\n    return <div className=\"loading\">Loading...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div className=\"error\">{error}</div>;\r\n  }\r\n\r\n  if (!userData) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <img\r\n        src={userData.avatar_url}\r\n        alt={`${username}'s avatar`}\r\n      />\r\n      <div>{userData.login}</div>\r\n      <h2>Repositories:</h2>\r\n      <ul>\r\n        {userData.repos_url && (\r\n          <li>Loading repositories...</li>\r\n        )}\r\n        {userData.public_repos > 0 ? (\r\n          userData.repos_url &&\r\n          fetch(userData.repos_url)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n              return data.map(repo => (\r\n                <li key={repo.id}>\r\n                  <a href={repo.html_url} target=\"_blank\" rel=\"noopener noreferrer\">{repo.name}</a>\r\n                </li>\r\n              ));\r\n            })\r\n        ) : (\r\n          <li>No repositories found</li>\r\n        )}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GitHubUser;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}